module pe16x16_interface(
    clk,
    rst,
    en,
    precision_mode_reg,
    in1,
    in2,
    a_in,
    b_in,
    valid
);
    input clk;
    input rst;
    input en;
    input [N*256-1: 0]in1;
    input [N*256-1: 0]in2;
    input [2:0] precision_mode_reg;
    output reg valid;
    output reg [N*16-1: 0]a_in;
    output reg [N*16-1: 0]b_in;

    localparam N = 32;
    localparam INT4 = 4;
    localparam INT8 = 8;
    localparam FP16 = 16;
    localparam FP32 = 32;
    wire [N-1:0] a [15:0][15:0];
    wire [N-1:0] b [15:0][15:0];
    reg [3:0] counter = 0;

    genvar i, h;
    generate
        for(h = 0; h < 16; h = h + 1)begin
            for(i = 0; i < 16; i = i + 1)begin
                 assign a [15-h][15-i]= precision_mode_reg == 0 ? {28'b0, in1[16*INT4*h + (i+1)*INT4-1 -: INT4]} :
                                        precision_mode_reg == 1 ? {24'b0, in1[16*INT8*h + (i+1)*INT8-1 -: INT8]} :
                                        precision_mode_reg == 2 ? {16'b0, in1[16*FP16*h + (i+1)*FP16-1 -: FP16]} :
                                        precision_mode_reg == 3 ? {       in1[16*FP32*h + (i+1)*FP32-1 -: FP32]} :
                                        precision_mode_reg == 4 ? {28'b0, in1[16*INT4*h + (i+1)*INT4-1 -: INT4]} :                                  
                                        precision_mode_reg == 5 ? {24'b0, in1[16*INT8*h + (i+1)*INT8-1 -: INT8]} :                                  
                                        precision_mode_reg == 6 ? {16'b0, in1[16*FP16*h + (i+1)*FP16-1 -: FP16]} : 0; 
            end
        end
        for (h = 0; h < 16; h = h + 1)begin
            for (i = 0; i < 16; i = i + 1)begin
                assign b [15-h][15-i]=  precision_mode_reg == 0 ? {28'b0, in2[16*h*INT4 + INT4*(i+1)-1 -: INT4]} :
                                        precision_mode_reg == 1 ? {24'b0, in2[16*h*INT8 + INT8*(i+1)-1 -: INT8]} :
                                        precision_mode_reg == 2 ? {16'b0, in2[16*h*FP16 + FP16*(i+1)-1 -: FP16]} :
                                        precision_mode_reg == 3 ? {       in2[16*h*FP32 + FP32*(i+1)-1 -: FP32]} :
                                        precision_mode_reg == 4 ? {28'b0, in2[16*INT4*h + (i+1)*INT4-1 -: INT4]} :  
                                        precision_mode_reg == 5 ? {24'b0, in2[16*INT8*h + (i+1)*INT8-1 -: INT8]} :  
                                        precision_mode_reg == 6 ? {16'b0, in2[16*FP16*h + (i+1)*FP16-1 -: FP16]} : 0;
            end
        end
    endgenerate
    
    always @(posedge clk or negedge rst) begin
        if(!rst)begin
            counter <= 0;
        end else if (en)
            if(counter == 15)
                counter <= 0;
            else
                counter <= counter + 1;        
    end

    always @(posedge clk or negedge rst) begin
        if(!rst)begin
            a_in <= 0;
            b_in <= 0;
        end else if(en) begin
            case (counter)
                0: begin
                    a_in <= {a[0][0], a[0][1], a[0][2], a[0][3], a[0][4], a[0][5], a[0][6], a[0][7], a[0][8], a[0][9], a[0][10], a[0][11], a[0][12], a[0][13], a[0][14], a[0][15]};
                    b_in <= {b[0][0], b[1][0], b[2][0], b[3][0], b[4][0], b[5][0], b[6][0], b[7][0], b[8][0], b[9][0], b[10][0], b[11][0], b[12][0], b[13][0], b[14][0], b[15][0]};
                    valid <= 1;
                end
                1:begin
                    a_in <= {a[1][0], a[1][1], a[1][2], a[1][3], a[1][4], a[1][5], a[1][6], a[1][7], a[1][8], a[1][9], a[1][10], a[1][11], a[1][12], a[1][13], a[1][14], a[1][15]};
                    b_in <= {b[0][1], b[1][1], b[2][1], b[3][1], b[4][1], b[5][1], b[6][1], b[7][1], b[8][1], b[9][1], b[10][1], b[11][1], b[12][1], b[13][1], b[14][1], b[15][1]};
                end
                2:begin
                    a_in <= {a[2][0], a[2][1], a[2][2], a[2][3], a[2][4], a[2][5], a[2][6], a[2][7], a[2][8], a[2][9], a[2][10], a[2][11], a[2][12], a[2][13], a[2][14], a[2][15]};
                    b_in <= {b[0][2], b[1][2], b[2][2], b[3][2], b[4][2], b[5][2], b[6][2], b[7][2], b[8][2], b[9][2], b[10][2], b[11][2], b[12][2], b[13][2], b[14][2], b[15][2]};
                end
                3:begin
                    a_in <= {a[3][0], a[3][1], a[3][2], a[3][3], a[3][4], a[3][5], a[3][6], a[3][7], a[3][8], a[3][9], a[3][10], a[3][11], a[3][12], a[3][13], a[3][14], a[3][15]};
                    b_in <= {b[0][3], b[1][3], b[2][3], b[3][3], b[4][3], b[5][3], b[6][3], b[7][3], b[8][3], b[9][3], b[10][3], b[11][3], b[12][3], b[13][3], b[14][3], b[15][3]};
                end
                4:begin
                    a_in <= {a[4][0], a[4][1], a[4][2], a[4][3], a[4][4], a[4][5], a[4][6], a[4][7], a[4][8], a[4][9], a[4][10], a[4][11], a[4][12], a[4][13], a[4][14], a[4][15]};
                    b_in <= {b[0][4], b[1][4], b[2][4], b[3][4], b[4][4], b[5][4], b[6][4], b[7][4], b[8][4], b[9][4], b[10][4], b[11][4], b[12][4], b[13][4], b[14][4], b[15][4]};
                end
                5:begin
                    a_in <= {a[5][0], a[5][1], a[5][2], a[5][3], a[5][4], a[5][5], a[5][6], a[5][7], a[5][8], a[5][9], a[5][10], a[5][11], a[5][12], a[5][13], a[5][14], a[5][15]};
                    b_in <= {b[0][5], b[1][5], b[2][5], b[3][5], b[4][5], b[5][5], b[6][5], b[7][5], b[8][5], b[9][5], b[10][5], b[11][5], b[12][5], b[13][5], b[14][5], b[15][5]};
                end
                6:begin
                    a_in <= {a[6][0], a[6][1], a[6][2], a[6][3], a[6][4], a[6][5], a[6][6], a[6][7], a[6][8], a[6][9], a[6][10], a[6][11], a[6][12], a[6][13], a[6][14], a[6][15]};
                    b_in <= {b[0][6], b[1][6], b[2][6], b[3][6], b[4][6], b[5][6], b[6][6], b[7][6], b[8][6], b[9][6], b[10][6], b[11][6], b[12][6], b[13][6], b[14][6], b[15][6]};
                end
                7:begin
                    a_in <= {a[7][0], a[7][1], a[7][2], a[7][3], a[7][4], a[7][5], a[7][6], a[7][7], a[7][8], a[7][9], a[7][10], a[7][11], a[7][12], a[7][13], a[7][14], a[7][15]};
                    b_in <= {b[0][7], b[1][7], b[2][7], b[3][7], b[4][7], b[5][7], b[6][7], b[7][7], b[8][7], b[9][7], b[10][7], b[11][7], b[12][7], b[13][7], b[14][7], b[15][7]};
                end
                8:begin
                    a_in <= {a[8][0], a[8][1], a[8][2], a[8][3], a[8][4], a[8][5], a[8][6], a[8][7], a[8][8], a[8][9], a[8][10], a[8][11], a[8][12], a[8][13], a[8][14], a[8][15]};
                    b_in <= {b[0][8], b[1][8], b[2][8], b[3][8], b[4][8], b[5][8], b[6][8], b[7][8], b[8][8], b[9][8], b[10][8], b[11][8], b[12][8], b[13][8], b[14][8], b[15][8]};
                end
                9:begin
                    a_in <= {a[9][0], a[9][1], a[9][2], a[9][3], a[9][4], a[9][5], a[9][6], a[9][7], a[9][8], a[9][9], a[9][10], a[9][11], a[9][12], a[9][13], a[9][14], a[9][15]};
                    b_in <= {b[0][9], b[1][9], b[2][9], b[3][9], b[4][9], b[5][9], b[6][9], b[7][9], b[8][9], b[9][9], b[10][9], b[11][9], b[12][9], b[13][9], b[14][9], b[15][9]};
                end
                10:begin
                    a_in <= {a[10][0], a[10][1], a[10][2], a[10][3], a[10][4], a[10][5], a[10][6], a[10][7], a[10][8], a[10][9], a[10][10], a[10][11], a[10][12], a[10][13], a[10][14], a[10][15]};
                    b_in <= {b[0][10], b[1][10], b[2][10], b[3][10], b[4][10], b[5][10], b[6][10], b[7][10], b[8][10], b[9][10], b[10][10], b[11][10], b[12][10], b[13][10], b[14][10], b[15][10]};
                end
                11:begin
                    a_in <= {a[11][0], a[11][1], a[11][2], a[11][3], a[11][4], a[11][5], a[11][6], a[11][7], a[11][8], a[11][9], a[11][10], a[11][11], a[11][12], a[11][13], a[11][14], a[11][15]};
                    b_in <= {b[0][11], b[1][11], b[2][11], b[3][11], b[4][11], b[5][11], b[6][11], b[7][11], b[8][11], b[9][11], b[10][11], b[11][11], b[12][11], b[13][11], b[14][11], b[15][11]};
                end
                12: begin
                    a_in <= {a[12][0], a[12][1], a[12][2], a[12][3], a[12][4], a[12][5], a[12][6], a[12][7], a[12][8], a[12][9], a[12][10], a[12][11], a[12][12], a[12][13], a[12][14], a[12][15]};
                    b_in <= {b[0][12], b[1][12], b[2][12], b[3][12], b[4][12], b[5][12], b[6][12], b[7][12], b[8][12], b[9][12], b[10][12], b[11][12], b[12][12], b[13][12], b[14][12], b[15][12]};
                end
                13: begin
                    a_in <= {a[13][0], a[13][1], a[13][2], a[13][3], a[13][4], a[13][5], a[13][6], a[13][7], a[13][8], a[13][9], a[13][10], a[13][11], a[13][12], a[13][13], a[13][14], a[13][15]};
                    b_in <= {b[0][13], b[1][13], b[2][13], b[3][13], b[4][13], b[5][13], b[6][13], b[7][13], b[8][13], b[9][13], b[10][13], b[11][13], b[12][13], b[13][13], b[14][13], b[15][13]};
                end
                14: begin
                    a_in <= {a[14][0], a[14][1], a[14][2], a[14][3], a[14][4], a[14][5], a[14][6], a[14][7], a[14][8], a[14][9], a[14][10], a[14][11], a[14][12], a[14][13], a[14][14], a[14][15]};
                    b_in <= {b[0][14], b[1][14], b[2][14], b[3][14], b[4][14], b[5][14], b[6][14], b[7][14], b[8][14], b[9][14], b[10][14], b[11][14], b[12][14], b[13][14], b[14][14], b[15][14]};
                end
                15: begin
                    a_in <= {a[15][0], a[15][1], a[15][2], a[15][3], a[15][4], a[15][5], a[15][6], a[15][7], a[15][8], a[15][9], a[15][10], a[15][11], a[15][12], a[15][13], a[15][14], a[15][15]};
                    b_in <= {b[0][15], b[1][15], b[2][15], b[3][15], b[4][15], b[5][15], b[6][15], b[7][15], b[8][15], b[9][15], b[10][15], b[11][15], b[12][15], b[13][15], b[14][15], b[15][15]};
                end
                default: begin
                    a_in <= 0;
                    b_in <= 0;
                end
            endcase
        end else begin
            valid <= 0;
        end
    end
endmodule